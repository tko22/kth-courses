{"version":3,"sources":["ModelContext.js","components/ListGroupItem/ListGroupItem.js","pages/Listed/Listed.js","components/TextToJSX/TextToJSX.js","pages/Course/Course.js","components/Banner/Banner.js","data/CourseModel.js","App.js","serviceWorker.js","index.js"],"names":["ModelContext","React","createContext","ListGroupItem","link","name","to","type","class","split","Listed","props","state","status","htmlList","url","this","match","code","params","context","model","getSchools","schools","htmlSchools","map","school","setState","getDepatments","depts","htmlDepts","dept","getCourses","deptJSON","courses","htmlCourses","course","title","input","search","results","htmlResults","Component","contextType","text","dangerouslySetInnerHTML","__html","Course","onCommentInputChange","e","commentInput","target","value","courseKTH","courseDB","overallCommentList","contentsList","examinationList","getCourseKTH","getCourseDBDetails","console","log","className","courseCode","addOn","TextToJSX","applicationInfo","substring","length","recruitmentText","Math","round","ratings","reduce","accumulator","x","id","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","placeholder","aria-label","aria-describedby","onChange","onClick","comment","Banner","onSearchInputChange","searchInput","useHistory","push","BASE_URL_KTH","proxyurl","headers","method","mode","BASE_URL_DB","modelInstance","response","ok","json","fetch","then","processResponse","catch","error","schoolCode","filter","deptCode","department","searchString","App","Provider","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7a8a0d9.chunk.js","sourcesContent":["import React from 'react';\nexport const ModelContext = React.createContext();","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst ListGroupItem = ({ link, name }) => (\n  <Link to={link}><button type=\"button\" class=\"list-group-item list-group-item-action\">{name.split(\"/\")[0]}<br />{name.split(\"/\")[1]}</button></Link>\n)\n\nexport default ListGroupItem","import React, { Component } from 'react'\nimport './Listed.css'\nimport { Link } from 'react-router-dom';\nimport { ModelContext } from '../../ModelContext'\nimport ListGroupItem from '../../components/ListGroupItem/ListGroupItem';\n\n\nclass Listed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { status: \"LOADING\", htmlList: null };\n  }\n\n  async componentDidMount() {\n    let url = this.props.match.url.split(\"/\")[1];\n    let code = this.props.match.params.code;\n    switch (url) {\n      case \"\":\n        const schools = await this.context.model.getSchools();\n        let htmlSchools = schools.map(school => (\n          <ListGroupItem link={`/school/${school.name}`} name={school.name} />\n        ));\n        this.setState({ status: \"LOADED\", htmlList: htmlSchools });\n        break;\n\n      case \"school\":\n        const depts = await this.context.model.getDepatments(code);\n        let htmlDepts = depts.map(dept => (\n          <Link to={`/department/${dept.code}/${dept.name}`}><button type=\"button\" class=\"list-group-item list-group-item-action\">{dept.code}<br />{dept.name.split(\"/\")[1]}</button></Link>\n        ));\n        this.setState({ status: \"LOADED\", htmlList: htmlDepts });\n        break;\n\n      case \"department\":\n        const deptJSON = await this.context.model.getCourses(code);\n        const courses = deptJSON.courses;\n        let htmlCourses = courses.map(course => (\n          <Link to={`/course/${course.code}`}><button type=\"button\" class=\"list-group-item list-group-item-action\">{course.code}<br />{course.title}</button></Link>\n        ));\n        this.setState({ status: \"LOADED\", htmlList: htmlCourses });\n        break;\n\n      case \"search\":\n        let input = this.props.match.params.input;\n        const results = await this.context.model.search(input);\n        let htmlResults = results.map(course => (\n          <Link to={`/course/${course.code}`}><button type=\"button\" class=\"list-group-item list-group-item-action\">{course.code}<br />{course.title}</button></Link>\n        ));\n        this.setState({ status: \"LOADED\", htmlList: htmlResults });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"container-fluid\">\n        <h1>Master's studies</h1>\n        <div class=\"row\">\n          <div class=\"list-group mx-auto\">\n            {this.state.htmlList}\n          </div>\n          <p>{this.state.status === \"LOADING\" ? 'Fetching...' : ''}</p>\n        </div>\n      </div>\n    )\n  }\n}\nListed.contextType = ModelContext;\nexport default Listed","import React from 'react'\n\nexport default ({ text }) => (\n  < div dangerouslySetInnerHTML={{ __html: text }}></ div >\n)","import React from 'react'\nimport './Course.css'\nimport { ModelContext } from '../../ModelContext'\nimport TextToJSX from '../../components/TextToJSX/TextToJSX'\n\nclass Course extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { status: \"LOADING\", courseKTH: null, courseDB: null, overallCommentList: null, contentsList: null, examinationList: null, commentInput: null }\n  }\n\n  async componentDidMount() {\n    let code = this.props.match.params.code;\n    const courseKTH = await this.context.model.getCourseKTH(code);\n    //const courses = deptJSON.courses;\n    let courseDB = await this.context.model.getCourseDBDetails(code);\n    // courseDB = courseDB[0];\n    // let htmlOverallComments = courseDB.overallComments.map(comment => (\n    //   <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n    //     {comment}\n    //     <span class=\"badge badge-primary badge-pill\">14</span>\n    //   </li>\n    // ));\n    // let htmlCourseContents = courseDB.courseContents.map(comment => (\n    //   <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n    //     {comment}\n    //     <span class=\"badge badge-primary badge-pill\">14</span>\n    //   </li>\n    // ));\n    // let htmlExamination = courseDB.examination.map(comment => (\n    //   <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n    //     {comment}\n    //     <span class=\"badge badge-primary badge-pill\">14</span>\n    //   </li>\n    // ));\n    this.setState({ status: \"LOADED\", courseKTH, courseDB });\n  }\n\n  onCommentInputChange = e => {\n    this.setState({ commentInput: e.target.value });\n  }\n\n  render() {\n    const { courseKTH, courseDB } = this.state;\n    console.log(courseDB)\n    return (\n      <div class=\"container\">\n        <div className=\"row\">\n          {courseKTH && courseKTH.course ?\n            <>\n              <h3>{courseKTH.course.courseCode}: {courseKTH.course.title}</h3>\n              {courseKTH.course.addOn ? <TextToJSX text={courseKTH.course.addOn} /> : \"\"}\n              {courseKTH.course.applicationInfo ? <TextToJSX text={courseKTH.course.applicationInfo.substring(3, courseKTH.course.applicationInfo.length - 4)} /> : \"\"}\n              {courseKTH.course.recruitmentText ? <TextToJSX text={courseKTH.course.recruitmentText.substring(3, courseKTH.course.recruitmentText.length - 4)} /> : \"\"}\n            </>\n            : null\n          }\n        </div>\n        <div class=\"card\">\n          <div class=\"card-body\">\n            Overall rating: {courseDB ? Math.round(((courseDB.ratings.reduce((accumulator, x) => accumulator + x, 0)) / courseDB.ratings.length) * 100) / 100 : null}\n          </div>\n        </div>\n\n        <div id=\"accordion\">\n          <div class=\"card\">\n            <div class=\"card-header\" id=\"headingOne\">\n              <h5 class=\"mb-0\">\n                <button class=\"btn collapsed\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\n                  Overall comments\n                </button>\n              </h5>\n            </div>\n\n            <div id=\"collapseOne\" class=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n              <div class=\"card-body\">\n                <div class=\"input-group mb-3\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Input\" aria-label=\"Input\" aria-describedby=\"basic-addon2\" onChange={this.onCommentInputChange} value={this.state.commentInput} />\n                  <div class=\"input-group-append\">\n                    <button class=\"btn btn-dark\" type=\"button\" onClick={this.context.model.comment()}>Comment</button>\n                  </div>\n                </div>\n                <ul class=\"list-group\">\n                  {/* {overallCommentList} */}\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"card\">\n            <div class=\"card-header\" id=\"headingTwo\">\n              <h5 class=\"mb-0\">\n                <button class=\"btn collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                  Course contents\n                </button>\n              </h5>\n            </div>\n            <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\n              <div class=\"card-body\">\n                <div class=\"input-group mb-3\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Input\" aria-label=\"Input\" aria-describedby=\"basic-addon2\" onChange={this.onCommentInputChange} value={this.state.commentInput} />\n                  <div class=\"input-group-append\">\n                    <button class=\"btn btn-dark\" type=\"button\" onClick={this.context.model.comment()}>Comment</button>\n                  </div>\n                </div>\n                <ul class=\"list-group\">\n                  {/* {contentsList} */}\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"card\">\n            <div class=\"card-header\" id=\"headingThree\">\n              <h5 class=\"mb-0\">\n                <button class=\"btn collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                  Examination\n                </button>\n              </h5>\n            </div>\n            <div id=\"collapseThree\" class=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n              <div class=\"card-body\">\n                <div class=\"input-group mb-3\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Input\" aria-label=\"Input\" aria-describedby=\"basic-addon2\" onChange={this.onCommentInputChange} value={this.state.commentInput} />\n                  <div class=\"input-group-append\">\n                    <button class=\"btn btn-dark\" type=\"button\" onClick={this.context.model.comment()}>Comment</button>\n                  </div>\n                </div>\n                <ul class=\"list-group\">\n                  {/* {examinationList} */}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div >\n    )\n  }\n}\nCourse.contextType = ModelContext;\nexport default Course","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport './Banner.css'\nimport { ModelContext } from '../../ModelContext'\nimport { Link } from \"react-router-dom\"\n\nclass Banner extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchInput: \"Input\" };\n  }\n\n  onSearchInputChange = e => {\n    this.setState({ searchInput: e.target.value });\n  }\n\n  search = () => {\n    let history = useHistory();\n    history.push(`/search/${this.state.searchInput}`);\n  }\n  render() {\n\n    return (\n      <div id=\"header\" class=\"header d-flex align-items-center justify-content-center container-fluid\">\n        <div class=\"row\">\n          <h1 class=\"display-4 mx-auto\"><Link to=\"/\">COURSE RATE</Link></h1>\n          <div class=\"input-group mb-3\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Input\" aria-label=\"Input\" aria-describedby=\"basic-addon2\" onChange={this.onSearchInputChange} value={this.state.searchInput} />\n            <div class=\"input-group-append\">\n              <button class=\"btn btn-dark\" type=\"button\" onClick={this.search}>Search</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nBanner.contextType = ModelContext;\nexport default Banner","const BASE_URL_KTH = \"https://www.kth.se/api/kopps/v2\";\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst headers = { method: 'GET', mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } };\nconst BASE_URL_DB = \"kth-courses-backend.tko.now.sh/api/courses\"\nclass CourseModel {\n    constructor() {\n        /*this._schoolList = \"\";\n        this._school = \"\";\n        this._department = \"\";\n        this.course = \"\"; */\n    }\n    processResponse(response) {\n        if (response.ok) {\n            return response.json();\n        }\n        throw response;\n    }\n    getSchools() {\n        return fetch(`${proxyurl}${BASE_URL_KTH}/schools?l=en`, headers)\n            .then(this.processResponse)\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n\n    async getDepatments(schoolCode) {\n        return fetch(`${proxyurl}${BASE_URL_KTH}/departments?l=en`, headers)\n            .then(this.processResponse)\n            .then(response => { return response.filter(dept => { return dept.name.split(\"/\")[0] === schoolCode }) })\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n\n    getCourses(deptCode) {\n        return fetch(`${proxyurl}${BASE_URL_KTH}/courses/${deptCode}.json?l=en`, headers)\n            .then(this.processResponse)\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n    getCourses2(deptCode) {\n        return fetch(`${proxyurl}${BASE_URL_KTH}/courses?l=en`, headers)\n            .then(this.processResponse)\n            .then(response => { return response.filter(course => { return (course.department.split(\" \")[0] === deptCode && course.state !== \"CANCELLED\") }) })\n            //.then(response => {return response.filter(course=>{return (course.department.split(\" \")[0]===deptCode)})})\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n    getCourseKTH(courseCode) {\n        return fetch(`${proxyurl}${BASE_URL_KTH}/course/${courseCode}/detailedinformation?l=en`, headers)\n            .then(this.processResponse)\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n    search(searchString) {\n        return fetch(`${proxyurl}${BASE_URL_KTH}/courses/search?text_pattern=${searchString}`, headers)\n            .then(this.processResponse)\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n\n    getAllCoursesDB() {\n        return fetch(`${BASE_URL_DB}`)\n            .then(this.processResponse)\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n    getCourseDBDetails(courseCode) {\n        // TODO: CHANGE\n        return fetch(`${BASE_URL_DB}/DH2642`) //${courseCode}`)\n            .then(this.processResponse)\n            .catch(error => {\n                console.error(\"Error:\", error);\n            });\n    }\n    comment() {\n\n    }\n    /* setCourse(courseCode) {\n        this.course = courseCode;\n    } */\n    /* getCookies() {\n\n    }\n    getSearchInput() {\n\n    }\n    setSearchInput() {\n\n    } */\n    /* setDepartment(deptCode) {\n        this._department = deptCode;\n    } */\n    /*setSchools(schoolList){\n        this._schoolList = schoolList;\n    } */\n    /* setSchool(schoolCode) {\n        this._school = schoolCode;\n    } */\n}\nconst modelInstance = new CourseModel();\nexport default modelInstance;","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport Listed from './pages/Listed/Listed'\nimport Course from './pages/Course/Course';\nimport Banner from './components/Banner/Banner';\nimport modelInstance from \"./data/CourseModel\";\nimport { ModelContext } from \"./ModelContext\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Banner />\n        {/* We rended diffrent component based on the path */}\n        <ModelContext.Provider value={{ model: modelInstance }}>\n          <Route exact path=\"/\" component={Listed} />\n          <Route path=\"/school/:code/:name\" component={Listed} />\n          <Route path=\"/department/:code/:schoolCode/:name\" component={Listed} />\n          <Route path=\"/search/:input\" component={Listed} />\n          <Route path=\"/course/:code\" component={Course} />\n        </ModelContext.Provider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}